Dim Results As String = ""
        Dim maps() As String = {"stronsay", "jersey", "london_z1", "isle_of_wight", "las_vegas", "london_m25_compressed"}

        For Each mapname As String In maps
            Dim FileName As String = mapname & ".osm"
            FileName = OSMFileSystemManager.GetFilePathFromName(FileName)
            Dim Loader As OSMLoader = New OSMLoader(FileName)
            Map = Loader.CreateMap()
            Dim AdjacencyList = Map.NodesAdjacencyList
            For Each RFM In [Enum].GetValues(GetType(RouteFindingMinimiser))
                Dim RouteCount As Integer = 100
                Dim StartPoints As New List(Of Node)
                Dim EndPoints As New List(Of Node)
                For i = 1 To RouteCount
                    StartPoints.Add(AdjacencyList.GetRandomNode)
                    EndPoints.Add(AdjacencyList.GetRandomNode)
                Next

                Dim Parameters() As Double = {1, 1.05, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20}
                Dim Distances(Parameters.Count) As Double
                Dim Times(Parameters.Count) As Double
                For Param = 0 To Parameters.Length - 1
                    Dim t As Stopwatch = Stopwatch.StartNew
                    Dim TotalCost As Double = 0
                    SimulationParameters.AStarAccelerator = Parameters(Param)
                    For Route = 0 To RouteCount - 1
                        Dim AStar As New AStarSearch(StartPoints(Route), EndPoints(Route), AdjacencyList, RFM)
                        TotalCost += AStar.GetRoute.GetCost(RFM, TimeSpan.FromHours(8))
                        'If t.ElapsedMilliseconds > 10000 AndAlso Param = 0 Then
                        '    RouteCount = Route + 1 'Short circuit if too much computation time
                        '    Exit For
                        'End If
                    Next
                    Distances(Param) = TotalCost
                    Times(Param) = t.ElapsedMilliseconds / RouteCount
                Next
                For i = 1 To Parameters.Length - 1
                    Distances(i) /= Distances(0)
                Next
                Distances(0) = 1.0

                Dim SB As New System.Text.StringBuilder
                For i = 0 To Parameters.Length - 1
                    SB.Append(Parameters(i))
                    SB.Append(vbTab)
                    SB.Append(Distances(i))
                    SB.Append(vbTab)
                    SB.Append(Times(i))
                    SB.Append(vbNewLine)
                Next
                Debug.WriteLine(mapname & vbNewLine & SB.ToString)
                Results &= mapname & vbNewLine & SB.ToString
            Next
        Next
        My.Computer.Clipboard.SetText(Results)
        MsgBox(Results)